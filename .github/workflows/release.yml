name: Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
    validate-version-input:
        runs-on: ubuntu-latest
        steps:
            - run: |
                VERSION=${{ github.event.inputs.release_version  }}
                if [[ ! $VERSION =~ ^v[0-9]+\.[0-9]+$ ]]; then
                echo "Invalid version format: $VERSION"
                exit 1
                fi
    build:
        runs-on: ubuntu-latest
        needs:
            - validate-version-input

        steps:
        - uses: actions/checkout@v3
        - name: Set up Python
          uses: actions/setup-python@v2
    
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install poetry poetry-dynamic-versioning twine
            poetry install

        - name: Build
          run: poetry build
        
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            name: dist-files
            path: dist/*
    
    release:
        name: release
        runs-on: ubuntu-latest
        needs: [build]

        steps:
        - uses: actions/checkout@v3

        - name: download wheels-files from artifact
          uses: actions/download-artifact@v3
          with:
            name: dist-files
            path: download-artifacts/

        - name: Create GitHub Release
          id: create_release
          uses: softprops/action-gh-release@v1
          with:
            tag_name: ${{ github.event.inputs.release_version }}
            files: download-artifacts/*
